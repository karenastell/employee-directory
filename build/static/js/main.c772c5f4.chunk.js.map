{"version":3,"sources":["components/Header.js","components/Table/TableData.js","components/Table/TableHeaders.js","components/Table/Table.js","components/Filter.js","components/Container.js","components/Footer.js","components/NoResultMessage.js","App.js","serviceWorker.js","index.js"],"names":["Header","class","TableData","props","Fragment","users","map","user","key","id","firstName","lastName","role","email","TableHeaders","scope","className","onClick","handleSortID","value","handleSortText","sortBy","handleSortLastName","Table","Filter","name","searchBy","onChange","handleInputChange","placeholder","list","filterByRole","removeDuplicates","resetTable","Container","fluid","children","Footer","NoResultMessage","App","state","Users","noResults","rolesArray","event","console","log","target","setState","preventDefault","sort","a","b","nameA","toUpperCase","nameB","search","filteredArray","filter","length","noResultMessage","newArray","push","Array","from","Set","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c772c5f4.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css'\n\nexport default function Header() {\n  return (\n    <div class=\"jumbotron jumbotron-fluid head-div\">\n    <div class=\"container\">\n      <h1 class=\"display-4\">React General Hospital</h1>\n      <p class=\"lead\">Employee Directory</p>\n    </div>\n  </div>\n  );\n}\n","import React from 'react';\n\nexport default function TableData(props) {\n  return (\n    <React.Fragment>\n      {props.users.map((user) => (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.firstName}</td>\n          <td>{user.lastName}</td>\n          <td>{user.role}</td>\n          <td>{user.email}</td>\n        </tr>\n      ))}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\n\n\nexport default function TableHeaders(props) {\n  return (\n    <tr>\n      <th scope='col'>\n        <button className='btn btn-secondary' onClick={props.handleSortID}>\n          ID\n        </button>\n      </th>\n      <th scope='col'>\n        <button\n          className='btn btn-secondary'\n          value='firstName'\n          onClick={props.handleSortText}\n        >\n          First Name\n        </button>\n      </th>\n      <th scope='col'>\n        <button\n          value={props.sortBy}\n          className='btn btn-secondary'\n          onClick={props.handleSortLastName}\n        >\n          Last Name\n        </button>\n      </th>\n      <th scope='col'>Role</th>\n      <th scope='col'>Email</th>\n    </tr>\n  );\n}\n","import React from 'react';\nimport TableData from './TableData';\nimport TableHeader from './TableHeaders';\n\nexport default function Table(props) {\n  return (\n    <div>\n      <table className='table table-dark'>\n        <thead>\n          <TableHeader\n             handleSortLastName={props.handleSortLastName} \n             handleSortID={props.handleSortID}\n             handleSortText={props.handleSortText} />\n        </thead>\n        <tbody>\n          <TableData\n            users={props.users}\n         \n          />\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import React from 'react';\nimport './filter.css';\n\nexport default function Filter(props) {\n  return (\n    <form className='form'>\n      <input\n        name='searchBy'\n        value={props.searchBy}\n        onChange={props.handleInputChange}\n        placeholder='Enter Role Name'\n        className='filter-input'\n        list='datalistOptions'\n      />\n      <button className='mr-2 ml-2 btn btn-info' onClick={props.filterByRole}>Search By Role</button>\n      <datalist id='datalistOptions'>\n        {props.removeDuplicates()}\n      </datalist>\n      <button className='ml-2 btn btn-info' onClick={props.resetTable}>Reset Table</button>\n    </form>\n\n  );\n}\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div className={`container${props.fluid ? '-fluid' : ''}`}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from 'react';\nimport './footer.css'\n\nexport default function Footer() {\n  return (\n    <nav className='navbar fixed-bottom navbar-light foot '>\n      <p className='align-items-center pt-3 business-name'>React General Hospital</p>\n    </nav>\n  );\n}","import React from 'react'\n\nexport default function NoResultMessage() {\n    return (\n        <div>\n            <h3>There are no users that match your search. Please try again.</h3>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Table from './components/Table/Table';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\nimport Users from './components/Users.json';\nimport Footer from './components/Footer';\nimport NoResultMessage from './components/NoResultMessage';\n\nexport default class App extends Component {\n  state = {\n    users: Users,\n    searchBy: '',\n    noResults: false,\n    sortBy: '',\n    rolesArray: [],\n  };\n\n  handleInputChange = (event) => {\n    // some more info go here: https://reactjs.org/docs/forms.html#controlled-components\n    console.log(event.target);\n    //   const value = event.target.value;\n    //   const name = event.target.name;\n\n    const { name, value } = event.target;\n\n    console.log(value, name);\n    // use brackets to signify the name in the state\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSortText = (event) => {\n    event.preventDefault();\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n    // sort by name\n    Users.sort(function (a, b) {\n      let nameA = a.firstName.toUpperCase(); // ignore upper and lowercase\n      let nameB = b.firstName.toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n    // set the state users to the new array to update the table\n    this.setState({\n      users: this.state.users,\n    });\n  };\n\n  handleSortLastName = (event) => {\n    event.preventDefault();\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n    // sort by name\n    Users.sort(function (a, b) {\n      let nameA = a.lastName.toUpperCase(); // ignore upper and lowercase\n      let nameB = b.lastName.toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      // names must be equal\n      return 0;\n    });\n    // set the state users to the new array to update the table\n    this.setState({\n      users: this.state.users,\n    });\n  };\n\n  handleSortID = (event) => {\n    event.preventDefault();\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n    Users.sort(function (a, b) {\n      return a.id - b.id;\n    });\n    // set the state users to the new array to update the table\n    this.setState({\n      users: this.state.users,\n    });\n  };\n\n  filterByRole = (event) => {\n    event.preventDefault();\n    this.setState({\n      noResults: false,\n      users: Users,\n    });\n    let search = this.state.searchBy;\n    // find all the users that have the role of the value of the input\n    // the input value updates the state: searchBy\n    let filteredArray = Users.filter((user) => {\n      return user.role === search;\n    });\n\n    console.log(filteredArray);\n    // determine if there are results or not to change the state if needed\n    if (filteredArray.length === 0) {\n      this.setState({\n        noResults: true,\n      });\n    }\n\n    // set the state users to the new array to update the table\n    this.setState({\n      users: filteredArray,\n    });\n  };\n\n  resetTable = (event) => {\n    event.preventDefault();\n    // set the state user back to the original json data\n    this.setState({\n      users: Users,\n    });\n  };\n\n  noResultMessage = () => {\n    // display a message to the user if there are no search results found\n    if (this.state.noResults === true) {\n      return <NoResultMessage />;\n    }\n  };\n\n  removeDuplicates = () => {\n    let newArray = [];\n    // put all the roles into an array\n    Users.map((user) => newArray.push(user.role));\n    // exclude duplicates into another array\n    let rolesArray = Array.from(new Set(newArray));\n    // return the options for the datalist\n    return rolesArray.map((role) => <option key={role} value={role} />);\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <Container>\n          <Filter\n            rolesArray={this.state.rolesArray}\n            resetTable={this.resetTable}\n            removeDuplicates={this.removeDuplicates}\n            handleInputChange={this.handleInputChange}\n            filterByRole={this.filterByRole}\n            users={this.state.users}\n          />\n          {this.noResultMessage()}\n          <Table\n            users={this.state.users}\n            handleSortID={this.handleSortID}\n            handleSortLastName={this.handleSortLastName}\n            handleSortText={this.handleSortText}\n          />\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}